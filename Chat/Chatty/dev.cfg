[global]
# This is where all of your settings go for your development environment
# Settings that are the same for both development and production
# (such as template engine, encodings, etc.) all go in
# Chatty/config/app.cfg

# DATABASE

# driver://username:password@host:port/database

# pick the form for your database
# sqlalchemy.dburi = 'postgres://username@hostname/databasename'
# sqlalchemy.dburi = 'mysql://username:password@hostname:port/databasename'
# sqlalchemy.dburi = 'sqlite:///relative/path/to/database/file'
# sqlalchemy.dburi = 'sqlite:////absolute/path/to/database/file'

# If you have sqlite, here's a simple default to get you started
# in development
sqlalchemy.dburi = 'sqlite:///%(current_dir_uri)s/devdata.sqlite'

# for Windows users, SQLAlchemy URIs for SQlite look like:
# sqlobject.dburi = 'sqlite:///drive_letter:/path/to/file'

# SERVER

# Some server parameters that you may want to tweak
# server.socket_port=8080

# Default is the development environment
# environment = 'production'

# Auto-Reload after code modification
engine.autoreload.on = True

# During development, missing slashes in links should not go unnoticed
tools.trailing_slash.on = False

# Set to True if you'd like to abort execution if a controller gets an
# unexpected parameter. False by default
tg.strict_parameters = True

# LOGGING

# CherryPy 3 logging settings. See http://www.cherrypy.org/wiki/Logging
# Set this to True to have both "error" and "access" messages printed to stdout.
# Set to False because we set our own 'cherrypy.access' logger below.
log.screen = False
# Set this to an absolute filename where you want "access" messages written.
# log.access_file = None
# Set this to an absolute filename where you want "error" messages written.
# log.error_file = None

# Logging configuration generally follows the style of the standard
# Python logging module configuration. Note that when specifying
# log format messages, you need to use *() for formatting variables.
# Deployment independent log configuration is in Chatty/config/log.cfg

[logging]

[[loggers]]

[[[allinfo]]]
level='INFO'
handlers=['debug_out']

[[[Chatty]]]
level='DEBUG'
qualname='Chatty'
handlers=['debug_out']
propagate=0

[[[access]]]
level='INFO'
qualname='cherrpy.access'
handlers=['access_out']
propagate=0

[[[error]]]
level='INFO'
qualname='cherrypy.error'
handlers=['debug_out']
propagate=0


[[[database]]]
# set to INFO to make SQLAlchemy display SQL commands
level='WARNING'
qualname='sqlalchemy.engine'
handlers=['debug_out']
propagate=0
